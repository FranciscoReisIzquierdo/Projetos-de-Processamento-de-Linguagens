
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA ID LCBRACKET OP RANGE RCBRACKET\n\tlanguage : expression\n\t\t\t | interval\n\t\t\t | size\n\t\t\t | function\n\t\t\t | empty\n\t\n\tinterval : LCBRACKET RANGE COMMA RANGE RCBRACKET\n\t\n\tsize : LCBRACKET RANGE RCBRACKET\n\t\n\tfunction : OP expression\n\t\n\texpression : expression size\n\t\n\texpression : expression interval\n\t\n\texpression : expression interval function\n\t\n\texpression : ID\n\t\n\tempty : \n\t'
    
_lr_action_items = {'ID':([0,9,],[7,7,]),'LCBRACKET':([0,2,7,10,11,14,15,18,20,],[8,12,-12,-9,-10,12,-11,-7,-6,]),'OP':([0,11,20,],[9,9,-6,]),'$end':([0,1,2,3,4,5,6,7,10,11,14,15,18,20,],[-13,0,-1,-2,-3,-4,-5,-12,-9,-10,-8,-11,-7,-6,]),'RANGE':([8,12,17,],[13,16,19,]),'COMMA':([13,16,],[17,17,]),'RCBRACKET':([13,16,19,],[18,18,20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'language':([0,],[1,]),'expression':([0,9,],[2,14,]),'interval':([0,2,14,],[3,11,11,]),'size':([0,2,14,],[4,10,10,]),'function':([0,11,],[5,15,]),'empty':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> language","S'",1,None,None,None),
  ('language -> expression','language',1,'p_language','projeto.py',109),
  ('language -> interval','language',1,'p_language','projeto.py',110),
  ('language -> size','language',1,'p_language','projeto.py',111),
  ('language -> function','language',1,'p_language','projeto.py',112),
  ('language -> empty','language',1,'p_language','projeto.py',113),
  ('interval -> LCBRACKET RANGE COMMA RANGE RCBRACKET','interval',5,'p_interval','projeto.py',119),
  ('size -> LCBRACKET RANGE RCBRACKET','size',3,'p_size','projeto.py',126),
  ('function -> OP expression','function',2,'p_function','projeto.py',132),
  ('expression -> expression size','expression',2,'p_expression_definedList','projeto.py',139),
  ('expression -> expression interval','expression',2,'p_expression_betweenList','projeto.py',147),
  ('expression -> expression interval function','expression',3,'p_expression_functionAgregList','projeto.py',155),
  ('expression -> ID','expression',1,'p_expression_id','projeto.py',164),
  ('empty -> <empty>','empty',0,'p_empty','projeto.py',172),
]
